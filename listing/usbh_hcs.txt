; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\MEDIA_USB_KEY\usbh_hcs.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\MEDIA_USB_KEY\usbh_hcs.d --cpu=Cortex-M4 --apcs=interwork -I.\Libraries\STM32_USB_OTG_Driver -I.\Libraries -I.\Utilities -I.\Libraries\CMSIS\ST\STM32F4xx\Include -I.\inc -I.\src -I.\Libraries\STM32F4xx_StdPeriph_Driver -I.\Libraries\STM32_USB_HOST_Library -I.\Libraries\STM32_USB_OTG_Driver -I.\Utilities\STM32F4-Discovery -I.\Libraries\CMSIS -I.\Utilities\Third_Party\fat_fs -IC:\Keil4\ARM\RV31\INC -IC:\Keil4\ARM\CMSIS\Include -IC:\Keil4\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DUSE_USB_OTG_FS -DSTM32F4XX -DMEDIA_USB_KEY -D__FPU_PRESENT=0 --omf_browse=.\MEDIA_USB_KEY\usbh_hcs.crf Libraries\STM32_USB_HOST_Library\usbh_hcs.c]
                          THUMB

                          AREA ||i.USBH_Alloc_Channel||, CODE, READONLY, ALIGN=1

                  USBH_Alloc_Channel PROC
;;;167      */
;;;168    uint8_t USBH_Alloc_Channel  (USB_OTG_CORE_HANDLE *pdev, uint8_t ep_addr)
000000  b530              PUSH     {r4,r5,lr}
;;;169    {
;;;170      uint16_t hc_num;
;;;171      
;;;172      hc_num =  USBH_GetFreeChannel(pdev);
000002  4603              MOV      r3,r0
000004  2200              MOVS     r2,#0
000006  f64f74ff          MOV      r4,#0xffff
                  |L1.10|
00000a  eb030542          ADD      r5,r3,r2,LSL #1
00000e  f8b5548c          LDRH     r5,[r5,#0x48c]
000012  042d              LSLS     r5,r5,#16
000014  d504              BPL      |L1.32|
000016  1c52              ADDS     r2,r2,#1
000018  b2d2              UXTB     r2,r2
00001a  2a08              CMP      r2,#8
00001c  d3f5              BCC      |L1.10|
00001e  4622              MOV      r2,r4
                  |L1.32|
;;;173    
;;;174      if (hc_num != HC_ERROR)
000020  42a2              CMP      r2,r4
000022  d005              BEQ      |L1.48|
;;;175      {
;;;176    	pdev->host.channel[hc_num] = HC_USED | ep_addr;
000024  eb030042          ADD      r0,r3,r2,LSL #1
000028  f4414100          ORR      r1,r1,#0x8000
00002c  f8a0148c          STRH     r1,[r0,#0x48c]
                  |L1.48|
;;;177      }
;;;178      return hc_num;
000030  b2d0              UXTB     r0,r2
;;;179    }
000032  bd30              POP      {r4,r5,pc}
;;;180    
                          ENDP


                          AREA ||i.USBH_DeAllocate_AllChannel||, CODE, READONLY, ALIGN=1

                  USBH_DeAllocate_AllChannel PROC
;;;202      */
;;;203    uint8_t USBH_DeAllocate_AllChannel  (USB_OTG_CORE_HANDLE *pdev)
000000  2102              MOVS     r1,#2
;;;204    {
;;;205       uint8_t idx;
;;;206       
;;;207       for (idx = 2; idx < HC_MAX ; idx ++)
000002  2200              MOVS     r2,#0
                  |L2.4|
;;;208       {
;;;209    	 pdev->host.channel[idx] = 0;
000004  eb000341          ADD      r3,r0,r1,LSL #1
000008  1c49              ADDS     r1,r1,#1              ;207
00000a  b2c9              UXTB     r1,r1                 ;207
00000c  f8a3248c          STRH     r2,[r3,#0x48c]
000010  2908              CMP      r1,#8                 ;207
000012  d3f7              BCC      |L2.4|
;;;210       }
;;;211       return USBH_OK;
000014  2000              MOVS     r0,#0
;;;212    }
000016  4770              BX       lr
;;;213    
                          ENDP


                          AREA ||i.USBH_Free_Channel||, CODE, READONLY, ALIGN=1

                  USBH_Free_Channel PROC
;;;186      */
;;;187    uint8_t USBH_Free_Channel  (USB_OTG_CORE_HANDLE *pdev, uint8_t idx)
000000  2908              CMP      r1,#8
;;;188    {
000002  d208              BCS      |L3.22|
;;;189       if(idx < HC_MAX)
;;;190       {
;;;191    	 pdev->host.channel[idx] &= HC_USED_MASK;
000004  eb000041          ADD      r0,r0,r1,LSL #1
000008  f200418c          ADD      r1,r0,#0x48c
00000c  f8b0048c          LDRH     r0,[r0,#0x48c]
000010  f3c0000e          UBFX     r0,r0,#0,#15
000014  8008              STRH     r0,[r1,#0]
                  |L3.22|
;;;192       }
;;;193       return USBH_OK;
000016  2000              MOVS     r0,#0
;;;194    }
000018  4770              BX       lr
;;;195    
                          ENDP


                          AREA ||i.USBH_Modify_Channel||, CODE, READONLY, ALIGN=1

                  USBH_Modify_Channel PROC
;;;133      */
;;;134    uint8_t USBH_Modify_Channel (USB_OTG_CORE_HANDLE *pdev,
000000  b570              PUSH     {r4-r6,lr}
;;;135                                uint8_t hc_num,
;;;136                                uint8_t dev_address,
;;;137                                uint8_t speed,
;;;138                                uint8_t ep_type,
;;;139                                uint16_t mps)
;;;140    {
;;;141      
;;;142      if(dev_address != 0)
;;;143      {
;;;144        pdev->host.hc[hc_num].dev_addr = dev_address;  
000002  eb001441          ADD      r4,r0,r1,LSL #5
000006  9d05              LDR      r5,[sp,#0x14]         ;140
000008  b10a              CBZ      r2,|L4.14|
00000a  f88422ac          STRB     r2,[r4,#0x2ac]
                  |L4.14|
;;;145      }
;;;146      
;;;147      if((pdev->host.hc[hc_num].max_packet != mps) && (mps != 0))
00000e  f8b422b2          LDRH     r2,[r4,#0x2b2]
000012  42aa              CMP      r2,r5
000014  d002              BEQ      |L4.28|
000016  b10d              CBZ      r5,|L4.28|
;;;148      {
;;;149        pdev->host.hc[hc_num].max_packet = mps; 
000018  f8a452b2          STRH     r5,[r4,#0x2b2]
                  |L4.28|
;;;150      }
;;;151      
;;;152      if((pdev->host.hc[hc_num].speed != speed ) && (speed != 0 )) 
00001c  f89422af          LDRB     r2,[r4,#0x2af]
000020  429a              CMP      r2,r3
000022  d002              BEQ      |L4.42|
000024  b10b              CBZ      r3,|L4.42|
;;;153      {
;;;154        pdev->host.hc[hc_num].speed = speed; 
000026  f88432af          STRB     r3,[r4,#0x2af]
                  |L4.42|
;;;155      }
;;;156      
;;;157      USB_OTG_HC_Init(pdev, hc_num);
00002a  f7fffffe          BL       USB_OTG_HC_Init
;;;158      return HC_OK; 
00002e  2000              MOVS     r0,#0
;;;159    
;;;160    }
000030  bd70              POP      {r4-r6,pc}
;;;161    
                          ENDP


                          AREA ||i.USBH_Open_Channel||, CODE, READONLY, ALIGN=1

                  USBH_Open_Channel PROC
;;;95       */
;;;96     uint8_t USBH_Open_Channel  (USB_OTG_CORE_HANDLE *pdev,
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;97                                 uint8_t hc_num,
;;;98                                 uint8_t dev_address,
;;;99                                 uint8_t speed,
;;;100                                uint8_t ep_type,
;;;101                                uint16_t mps)
;;;102    {
;;;103    
;;;104      pdev->host.hc[hc_num].ep_num = pdev->host.channel[hc_num]& 0x7F;
000004  eb000441          ADD      r4,r0,r1,LSL #1
000008  e9dd6706          LDRD     r6,r7,[sp,#0x18]      ;102
00000c  f204458c          ADD      r5,r4,#0x48c
000010  f894448c          LDRB     r4,[r4,#0x48c]
000014  f0040c7f          AND      r12,r4,#0x7f
000018  eb001441          ADD      r4,r0,r1,LSL #5
00001c  f504742b          ADD      r4,r4,#0x2ac
000020  f884c001          STRB     r12,[r4,#1]
;;;105      pdev->host.hc[hc_num].ep_is_in = (pdev->host.channel[hc_num] & 0x80 ) == 0x80;  
000024  782d              LDRB     r5,[r5,#0]
000026  f3c515c0          UBFX     r5,r5,#7,#1
00002a  70a5              STRB     r5,[r4,#2]
;;;106      pdev->host.hc[hc_num].dev_addr = dev_address;  
00002c  7022              STRB     r2,[r4,#0]
;;;107      pdev->host.hc[hc_num].ep_type = ep_type;  
00002e  7166              STRB     r6,[r4,#5]
;;;108      pdev->host.hc[hc_num].max_packet = mps; 
000030  80e7              STRH     r7,[r4,#6]
;;;109      pdev->host.hc[hc_num].speed = speed; 
000032  70e3              STRB     r3,[r4,#3]
;;;110      pdev->host.hc[hc_num].toggle_in = 0; 
000034  2200              MOVS     r2,#0
000036  7622              STRB     r2,[r4,#0x18]
;;;111      pdev->host.hc[hc_num].toggle_out = 0;   
000038  7662              STRB     r2,[r4,#0x19]
00003a  f5a4742b          SUB      r4,r4,#0x2ac
00003e  b913              CBNZ     r3,|L5.70|
;;;112      if(speed == HPRT0_PRTSPD_HIGH_SPEED)
;;;113      {
;;;114        pdev->host.hc[hc_num].do_ping = 1;
000040  2201              MOVS     r2,#1
000042  f88422b0          STRB     r2,[r4,#0x2b0]
                  |L5.70|
;;;115      }
;;;116      
;;;117      USB_OTG_HC_Init(pdev, hc_num) ;
000046  f7fffffe          BL       USB_OTG_HC_Init
;;;118      
;;;119      return HC_OK; 
00004a  2000              MOVS     r0,#0
;;;120    
;;;121    }
00004c  e8bd81f0          POP      {r4-r8,pc}
;;;122    
                          ENDP


;*** Start embedded assembler ***

#line 1 "Libraries\\STM32_USB_HOST_Library\\usbh_hcs.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_usbh_hcs_c_cb343afe____REV16|
#line 114 ".\\Libraries\\CMSIS\\core_cmInstr.h"
|__asm___10_usbh_hcs_c_cb343afe____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___10_usbh_hcs_c_cb343afe____REVSH|
#line 128
|__asm___10_usbh_hcs_c_cb343afe____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

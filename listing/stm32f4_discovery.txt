; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\media_usb_key\stm32f4_discovery.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\media_usb_key\stm32f4_discovery.d --cpu=Cortex-M4 --apcs=interwork -I.\Libraries -I.\Utilities -I.\Libraries\CMSIS\ST\STM32F4xx\Include -I.\inc -I.\src -I.\Libraries\STM32F4xx_StdPeriph_Driver -I.\Libraries\STM32_USB_HOST_Library -I.\Libraries\STM32_USB_OTG_Driver -I.\Utilities\STM32F4-Discovery -I.\Libraries\CMSIS -I.\Utilities\Third_Party\fat_fs -IC:\Keil4\ARM\RV31\INC -IC:\Keil4\ARM\CMSIS\Include -IC:\Keil4\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DUSE_USB_OTG_FS -DSTM32F4XX -DMEDIA_USB_KEY -D__FPU_PRESENT=0 --omf_browse=.\media_usb_key\stm32f4_discovery.crf Utilities\STM32F4-Discovery\stm32f4_discovery.c]
                          THUMB

                          AREA ||i.STM_EVAL_LEDInit||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDInit PROC
;;;115      */
;;;116    void STM_EVAL_LEDInit(Led_TypeDef Led)
000000  b51c              PUSH     {r2-r4,lr}
;;;117    {
000002  4604              MOV      r4,r0
;;;118      GPIO_InitTypeDef  GPIO_InitStructure;
;;;119      
;;;120      /* Enable the GPIO_LED Clock */
;;;121      RCC_AHB1PeriphClockCmd(GPIO_CLK[Led], ENABLE);
000004  480e              LDR      r0,|L1.64|
000006  2101              MOVS     r1,#1
000008  f8500024          LDR      r0,[r0,r4,LSL #2]
00000c  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;122    
;;;123      /* Configure the GPIO_LED pin */
;;;124      GPIO_InitStructure.GPIO_Pin = GPIO_PIN[Led];
000010  480b              LDR      r0,|L1.64|
;;;125      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
;;;126      GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
000012  2100              MOVS     r1,#0
000014  3808              SUBS     r0,r0,#8              ;124
000016  f8300014          LDRH     r0,[r0,r4,LSL #1]     ;124
00001a  9000              STR      r0,[sp,#0]            ;125
00001c  2001              MOVS     r0,#1                 ;125
00001e  f88d0004          STRB     r0,[sp,#4]            ;125
000022  f88d1006          STRB     r1,[sp,#6]
;;;127      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
000026  f88d0007          STRB     r0,[sp,#7]
;;;128      GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
00002a  2002              MOVS     r0,#2
00002c  f88d0005          STRB     r0,[sp,#5]
;;;129      GPIO_Init(GPIO_PORT[Led], &GPIO_InitStructure);
000030  4804              LDR      r0,|L1.68|
000032  4669              MOV      r1,sp
000034  f8500024          LDR      r0,[r0,r4,LSL #2]
000038  f7fffffe          BL       GPIO_Init
;;;130    }
00003c  bd1c              POP      {r2-r4,pc}
;;;131    
                          ENDP

00003e  0000              DCW      0x0000
                  |L1.64|
                          DCD      ||.constdata||+0x14
                  |L1.68|
                          DCD      ||.data||+0x4

                          AREA ||i.STM_EVAL_LEDOff||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDOff PROC
;;;156      */
;;;157    void STM_EVAL_LEDOff(Led_TypeDef Led)
000000  4903              LDR      r1,|L2.16|
;;;158    {
;;;159      GPIO_PORT[Led]->BSRRH = GPIO_PIN[Led];  
000002  4a04              LDR      r2,|L2.20|
000004  f8311010          LDRH     r1,[r1,r0,LSL #1]
000008  f8520020          LDR      r0,[r2,r0,LSL #2]
00000c  8341              STRH     r1,[r0,#0x1a]
;;;160    }
00000e  4770              BX       lr
;;;161    
                          ENDP

                  |L2.16|
                          DCD      ||.constdata||+0xc
                  |L2.20|
                          DCD      ||.data||+0x4

                          AREA ||i.STM_EVAL_LEDOn||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDOn PROC
;;;141      */
;;;142    void STM_EVAL_LEDOn(Led_TypeDef Led)
000000  4903              LDR      r1,|L3.16|
;;;143    {
;;;144      GPIO_PORT[Led]->BSRRL = GPIO_PIN[Led];
000002  4a04              LDR      r2,|L3.20|
000004  f8311010          LDRH     r1,[r1,r0,LSL #1]
000008  f8520020          LDR      r0,[r2,r0,LSL #2]
00000c  8301              STRH     r1,[r0,#0x18]
;;;145    }
00000e  4770              BX       lr
;;;146    
                          ENDP

                  |L3.16|
                          DCD      ||.constdata||+0xc
                  |L3.20|
                          DCD      ||.data||+0x4

                          AREA ||i.STM_EVAL_LEDToggle||, CODE, READONLY, ALIGN=2

                  STM_EVAL_LEDToggle PROC
;;;171      */
;;;172    void STM_EVAL_LEDToggle(Led_TypeDef Led)
000000  4904              LDR      r1,|L4.20|
;;;173    {
;;;174      GPIO_PORT[Led]->ODR ^= GPIO_PIN[Led];
000002  f8511020          LDR      r1,[r1,r0,LSL #2]
000006  694a              LDR      r2,[r1,#0x14]
000008  4b03              LDR      r3,|L4.24|
00000a  f8330010          LDRH     r0,[r3,r0,LSL #1]
00000e  4042              EORS     r2,r2,r0
000010  614a              STR      r2,[r1,#0x14]
;;;175    }
000012  4770              BX       lr
;;;176    
                          ENDP

                  |L4.20|
                          DCD      ||.data||+0x4
                  |L4.24|
                          DCD      ||.constdata||+0xc

                          AREA ||i.STM_EVAL_PBGetState||, CODE, READONLY, ALIGN=2

                  STM_EVAL_PBGetState PROC
;;;231      */
;;;232    uint32_t STM_EVAL_PBGetState(Button_TypeDef Button)
000000  4903              LDR      r1,|L5.16|
;;;233    {
;;;234      return GPIO_ReadInputDataBit(BUTTON_PORT[Button], BUTTON_PIN[Button]);
000002  4a04              LDR      r2,|L5.20|
000004  f8311010          LDRH     r1,[r1,r0,LSL #1]
000008  f8520020          LDR      r0,[r2,r0,LSL #2]
00000c  f7ffbffe          B.W      GPIO_ReadInputDataBit
;;;235    }
;;;236    
                          ENDP

                  |L5.16|
                          DCD      ||.constdata||+0x4
                  |L5.20|
                          DCD      ||.data||

                          AREA ||i.STM_EVAL_PBInit||, CODE, READONLY, ALIGN=2

                  STM_EVAL_PBInit PROC
;;;187      */
;;;188    void STM_EVAL_PBInit(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode)
000000  b570              PUSH     {r4-r6,lr}
;;;189    {
000002  4604              MOV      r4,r0
;;;190      GPIO_InitTypeDef GPIO_InitStructure;
;;;191      EXTI_InitTypeDef EXTI_InitStructure;
;;;192      NVIC_InitTypeDef NVIC_InitStructure;
;;;193    
;;;194      /* Enable the BUTTON Clock */
;;;195      RCC_AHB1PeriphClockCmd(BUTTON_CLK[Button], ENABLE);
000004  4822              LDR      r0,|L6.144|
000006  460e              MOV      r6,r1                 ;189
000008  b086              SUB      sp,sp,#0x18           ;189
00000a  f8500024          LDR      r0,[r0,r4,LSL #2]
00000e  2101              MOVS     r1,#1
000010  f7fffffe          BL       RCC_AHB1PeriphClockCmd
;;;196      RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
000014  2101              MOVS     r1,#1
000016  0388              LSLS     r0,r1,#14
000018  f7fffffe          BL       RCC_APB2PeriphClockCmd
;;;197    
;;;198      /* Configure Button pin as input */
;;;199      GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
;;;200      GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;
;;;201      GPIO_InitStructure.GPIO_Pin = BUTTON_PIN[Button];
00001c  481c              LDR      r0,|L6.144|
00001e  2500              MOVS     r5,#0                 ;199
000020  f88d5010          STRB     r5,[sp,#0x10]         ;199
000024  1f00              SUBS     r0,r0,#4
000026  f88d5013          STRB     r5,[sp,#0x13]         ;200
00002a  f8300014          LDRH     r0,[r0,r4,LSL #1]
;;;202      GPIO_Init(BUTTON_PORT[Button], &GPIO_InitStructure);
00002e  9003              STR      r0,[sp,#0xc]
000030  4818              LDR      r0,|L6.148|
000032  a903              ADD      r1,sp,#0xc
000034  f8500024          LDR      r0,[r0,r4,LSL #2]
000038  f7fffffe          BL       GPIO_Init
;;;203    
;;;204      if (Button_Mode == BUTTON_MODE_EXTI)
00003c  2e01              CMP      r6,#1
00003e  d125              BNE      |L6.140|
;;;205      {
;;;206        /* Connect Button EXTI Line to Button GPIO Pin */
;;;207        SYSCFG_EXTILineConfig(BUTTON_PORT_SOURCE[Button], BUTTON_PIN_SOURCE[Button]);
000040  4813              LDR      r0,|L6.144|
000042  1fc0              SUBS     r0,r0,#7
000044  5d01              LDRB     r1,[r0,r4]
000046  1e40              SUBS     r0,r0,#1
000048  5d00              LDRB     r0,[r0,r4]
00004a  f7fffffe          BL       SYSCFG_EXTILineConfig
;;;208    
;;;209        /* Configure Button EXTI line */
;;;210        EXTI_InitStructure.EXTI_Line = BUTTON_EXTI_LINE[Button];
00004e  4810              LDR      r0,|L6.144|
000050  1e80              SUBS     r0,r0,#2
000052  f8300014          LDRH     r0,[r0,r4,LSL #1]
;;;211        EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;
000056  9000              STR      r0,[sp,#0]
000058  f88d5004          STRB     r5,[sp,#4]
;;;212        EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  
00005c  2008              MOVS     r0,#8
00005e  f88d0005          STRB     r0,[sp,#5]
;;;213        EXTI_InitStructure.EXTI_LineCmd = ENABLE;
000062  2501              MOVS     r5,#1
000064  f88d5006          STRB     r5,[sp,#6]
;;;214        EXTI_Init(&EXTI_InitStructure);
000068  4668              MOV      r0,sp
00006a  f7fffffe          BL       EXTI_Init
;;;215    
;;;216        /* Enable and set Button EXTI Interrupt to the lowest priority */
;;;217        NVIC_InitStructure.NVIC_IRQChannel = BUTTON_IRQn[Button];
00006e  4808              LDR      r0,|L6.144|
000070  1f80              SUBS     r0,r0,#6
000072  5d00              LDRB     r0,[r0,r4]
000074  f88d0008          STRB     r0,[sp,#8]
;;;218        NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x0F;
000078  200f              MOVS     r0,#0xf
00007a  f88d0009          STRB     r0,[sp,#9]
;;;219        NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x0F;
00007e  f88d000a          STRB     r0,[sp,#0xa]
;;;220        NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
000082  f88d500b          STRB     r5,[sp,#0xb]
;;;221    
;;;222        NVIC_Init(&NVIC_InitStructure); 
000086  a802              ADD      r0,sp,#8
000088  f7fffffe          BL       NVIC_Init
                  |L6.140|
;;;223      }
;;;224    }
00008c  b006              ADD      sp,sp,#0x18
00008e  bd70              POP      {r4-r6,pc}
;;;225    
                          ENDP

                  |L6.144|
                          DCD      ||.constdata||+0x8
                  |L6.148|
                          DCD      ||.data||

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  BUTTON_PORT_SOURCE
000000  00                DCB      0x00
                  BUTTON_PIN_SOURCE
000001  00                DCB      0x00
                  BUTTON_IRQn
000002  0600              DCB      0x06,0x00
                  BUTTON_PIN
000004  0001              DCW      0x0001
                  BUTTON_EXTI_LINE
000006  0001              DCW      0x0001
                  BUTTON_CLK
                          DCD      0x00000001
                  GPIO_PIN
00000c  10002000          DCW      0x1000,0x2000
000010  40008000          DCW      0x4000,0x8000
                  GPIO_CLK
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000008
                          DCD      0x00000008

                          AREA ||.data||, DATA, ALIGN=2

                  BUTTON_PORT
                          DCD      0x40020000
                  GPIO_PORT
                          DCD      0x40020c00
                          DCD      0x40020c00
                          DCD      0x40020c00
                          DCD      0x40020c00

                          AREA ||area_number.11||, DATA, ALIGN=0

                          EXPORTAS ||area_number.11||, ||.data||
                  NVIC_InitStructure
                          DCDU     0x00000000

;*** Start embedded assembler ***

#line 1 "Utilities\\STM32F4-Discovery\\stm32f4_discovery.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___19_stm32f4_discovery_c_c84236cb____REV16|
#line 114 ".\\Libraries\\CMSIS\\core_cmInstr.h"
|__asm___19_stm32f4_discovery_c_c84236cb____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___19_stm32f4_discovery_c_c84236cb____REVSH|
#line 128
|__asm___19_stm32f4_discovery_c_c84236cb____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

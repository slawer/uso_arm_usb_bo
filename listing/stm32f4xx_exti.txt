; generated by ARM C/C++ Compiler, 5.03 [Build 24]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\MEDIA_USB_KEY\stm32f4xx_exti.o --asm_dir=.\listing\ --list_dir=.\listing\ --depend=.\MEDIA_USB_KEY\stm32f4xx_exti.d --cpu=Cortex-M4 --apcs=interwork -I.\Libraries -I.\Utilities -I.\Libraries\CMSIS\ST\STM32F4xx\Include -I.\inc -I.\src -I.\Libraries\STM32F4xx_StdPeriph_Driver -I.\Libraries\STM32_USB_HOST_Library -I.\Libraries\STM32_USB_OTG_Driver -I.\Utilities\STM32F4-Discovery -I.\Libraries\CMSIS -I.\Utilities\Third_Party\fat_fs -IC:\Keil4\ARM\RV31\INC -IC:\Keil4\ARM\CMSIS\Include -IC:\Keil4\ARM\Inc\ST\STM32F4xx -D__MICROLIB -DUSE_STDPERIPH_DRIVER -DUSE_USB_OTG_FS -DSTM32F4XX -DMEDIA_USB_KEY -D__FPU_PRESENT=0 --omf_browse=.\MEDIA_USB_KEY\stm32f4xx_exti.crf Libraries\CMSIS\stm32f4xx_exti.c]
                          THUMB

                          AREA ||i.EXTI_ClearFlag||, CODE, READONLY, ALIGN=2

                  EXTI_ClearFlag PROC
;;;242      */
;;;243    void EXTI_ClearFlag(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L1.8|
;;;244    {
;;;245      /* Check the parameters */
;;;246      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;247      
;;;248      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;249    }
000004  4770              BX       lr
;;;250    
                          ENDP

000006  0000              DCW      0x0000
                  |L1.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_ClearITPendingBit||, CODE, READONLY, ALIGN=2

                  EXTI_ClearITPendingBit PROC
;;;281      */
;;;282    void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
000000  4901              LDR      r1,|L2.8|
;;;283    {
;;;284      /* Check the parameters */
;;;285      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;286      
;;;287      EXTI->PR = EXTI_Line;
000002  6008              STR      r0,[r1,#0]
;;;288    }
000004  4770              BX       lr
;;;289    
                          ENDP

000006  0000              DCW      0x0000
                  |L2.8|
                          DCD      0x40013c14

                          AREA ||i.EXTI_DeInit||, CODE, READONLY, ALIGN=2

                  EXTI_DeInit PROC
;;;102      */
;;;103    void EXTI_DeInit(void)
000000  4906              LDR      r1,|L3.28|
;;;104    {
;;;105      EXTI->IMR = 0x00000000;
000002  2000              MOVS     r0,#0
000004  6008              STR      r0,[r1,#0]
;;;106      EXTI->EMR = 0x00000000;
000006  1d09              ADDS     r1,r1,#4
000008  6008              STR      r0,[r1,#0]
;;;107      EXTI->RTSR = 0x00000000;
00000a  1d09              ADDS     r1,r1,#4
00000c  6008              STR      r0,[r1,#0]
;;;108      EXTI->FTSR = 0x00000000;
00000e  1d09              ADDS     r1,r1,#4
000010  6008              STR      r0,[r1,#0]
;;;109      EXTI->PR = 0x007FFFFF;
000012  4902              LDR      r1,|L3.28|
000014  4802              LDR      r0,|L3.32|
000016  3114              ADDS     r1,r1,#0x14
000018  6008              STR      r0,[r1,#0]
;;;110    }
00001a  4770              BX       lr
;;;111    
                          ENDP

                  |L3.28|
                          DCD      0x40013c00
                  |L3.32|
                          DCD      0x007fffff

                          AREA ||i.EXTI_GenerateSWInterrupt||, CODE, READONLY, ALIGN=2

                  EXTI_GenerateSWInterrupt PROC
;;;189      */
;;;190    void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
000000  4902              LDR      r1,|L4.12|
;;;191    {
;;;192      /* Check the parameters */
;;;193      assert_param(IS_EXTI_LINE(EXTI_Line));
;;;194      
;;;195      EXTI->SWIER |= EXTI_Line;
000002  680a              LDR      r2,[r1,#0]
000004  4302              ORRS     r2,r2,r0
000006  600a              STR      r2,[r1,#0]
;;;196    }
000008  4770              BX       lr
;;;197    
                          ENDP

00000a  0000              DCW      0x0000
                  |L4.12|
                          DCD      0x40013c10

                          AREA ||i.EXTI_GetFlagStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetFlagStatus PROC
;;;219      */
;;;220    FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
000000  4a03              LDR      r2,|L5.16|
;;;221    {
000002  4601              MOV      r1,r0
;;;222      FlagStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;223      /* Check the parameters */
;;;224      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;225      
;;;226      if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
000006  6812              LDR      r2,[r2,#0]
000008  420a              TST      r2,r1
00000a  d000              BEQ      |L5.14|
;;;227      {
;;;228        bitstatus = SET;
00000c  2001              MOVS     r0,#1
                  |L5.14|
;;;229      }
;;;230      else
;;;231      {
;;;232        bitstatus = RESET;
;;;233      }
;;;234      return bitstatus;
;;;235    }
00000e  4770              BX       lr
;;;236    
                          ENDP

                  |L5.16|
                          DCD      0x40013c14

                          AREA ||i.EXTI_GetITStatus||, CODE, READONLY, ALIGN=2

                  EXTI_GetITStatus PROC
;;;256      */
;;;257    ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
000000  4a06              LDR      r2,|L6.28|
;;;258    {
000002  4601              MOV      r1,r0
;;;259      ITStatus bitstatus = RESET;
000004  2000              MOVS     r0,#0
;;;260      uint32_t enablestatus = 0;
;;;261      /* Check the parameters */
;;;262      assert_param(IS_GET_EXTI_LINE(EXTI_Line));
;;;263      
;;;264      enablestatus =  EXTI->IMR & EXTI_Line;
000006  6812              LDR      r2,[r2,#0]
;;;265      if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
000008  4b04              LDR      r3,|L6.28|
00000a  400a              ANDS     r2,r2,r1              ;264
00000c  3314              ADDS     r3,r3,#0x14
00000e  681b              LDR      r3,[r3,#0]
000010  420b              TST      r3,r1
000012  d002              BEQ      |L6.26|
000014  2a00              CMP      r2,#0
000016  d000              BEQ      |L6.26|
;;;266      {
;;;267        bitstatus = SET;
000018  2001              MOVS     r0,#1
                  |L6.26|
;;;268      }
;;;269      else
;;;270      {
;;;271        bitstatus = RESET;
;;;272      }
;;;273      return bitstatus;
;;;274    }
00001a  4770              BX       lr
;;;275    
                          ENDP

                  |L6.28|
                          DCD      0x40013c00

                          AREA ||i.EXTI_Init||, CODE, READONLY, ALIGN=2

                  EXTI_Init PROC
;;;118      */
;;;119    void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
000000  b530              PUSH     {r4,r5,lr}
;;;120    {
;;;121      uint32_t tmp = 0;
;;;122    
;;;123      /* Check the parameters */
;;;124      assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
;;;125      assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
;;;126      assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
;;;127      assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
;;;128    
;;;129      tmp = (uint32_t)EXTI_BASE;
000002  4a1a              LDR      r2,|L7.108|
;;;130         
;;;131      if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
000004  7983              LDRB     r3,[r0,#6]
000006  6801              LDR      r1,[r0,#0]            ;120
000008  b353              CBZ      r3,|L7.96|
;;;132      {
;;;133        /* Clear EXTI line configuration */
;;;134        EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
00000a  6813              LDR      r3,[r2,#0]
00000c  438b              BICS     r3,r3,r1
00000e  6013              STR      r3,[r2,#0]
;;;135        EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
000010  1d11              ADDS     r1,r2,#4
000012  680b              LDR      r3,[r1,#0]
000014  6804              LDR      r4,[r0,#0]
000016  43a3              BICS     r3,r3,r4
000018  600b              STR      r3,[r1,#0]
;;;136        
;;;137        tmp += EXTI_InitStruct->EXTI_Mode;
00001a  7901              LDRB     r1,[r0,#4]
00001c  4411              ADD      r1,r1,r2
;;;138    
;;;139        *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
00001e  680b              LDR      r3,[r1,#0]
000020  6804              LDR      r4,[r0,#0]
000022  4323              ORRS     r3,r3,r4
000024  600b              STR      r3,[r1,#0]
;;;140    
;;;141        /* Clear Rising Falling edge configuration */
;;;142        EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
000026  4b11              LDR      r3,|L7.108|
000028  3308              ADDS     r3,r3,#8
00002a  6819              LDR      r1,[r3,#0]
00002c  6804              LDR      r4,[r0,#0]
00002e  43a1              BICS     r1,r1,r4
000030  6019              STR      r1,[r3,#0]
;;;143        EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
000032  1d1c              ADDS     r4,r3,#4
000034  6821              LDR      r1,[r4,#0]
000036  6805              LDR      r5,[r0,#0]
000038  43a9              BICS     r1,r1,r5
00003a  6021              STR      r1,[r4,#0]
;;;144        
;;;145        /* Select the trigger for the selected external interrupts */
;;;146        if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
00003c  7941              LDRB     r1,[r0,#5]
00003e  2910              CMP      r1,#0x10
000040  d005              BEQ      |L7.78|
;;;147        {
;;;148          /* Rising Falling edge */
;;;149          EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
;;;150          EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
;;;151        }
;;;152        else
;;;153        {
;;;154          tmp = (uint32_t)EXTI_BASE;
;;;155          tmp += EXTI_InitStruct->EXTI_Trigger;
000042  4411              ADD      r1,r1,r2
;;;156    
;;;157          *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
000044  680a              LDR      r2,[r1,#0]
000046  6800              LDR      r0,[r0,#0]
000048  4302              ORRS     r2,r2,r0
00004a  600a              STR      r2,[r1,#0]
;;;158        }
;;;159      }
;;;160      else
;;;161      {
;;;162        tmp += EXTI_InitStruct->EXTI_Mode;
;;;163    
;;;164        /* Disable the selected external lines */
;;;165        *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
;;;166      }
;;;167    }
00004c  bd30              POP      {r4,r5,pc}
                  |L7.78|
00004e  6819              LDR      r1,[r3,#0]            ;149
000050  6802              LDR      r2,[r0,#0]            ;149
000052  4311              ORRS     r1,r1,r2              ;149
000054  6019              STR      r1,[r3,#0]            ;149
000056  6821              LDR      r1,[r4,#0]            ;150
000058  6800              LDR      r0,[r0,#0]            ;150
00005a  4301              ORRS     r1,r1,r0              ;150
00005c  6021              STR      r1,[r4,#0]            ;150
00005e  bd30              POP      {r4,r5,pc}
                  |L7.96|
000060  7900              LDRB     r0,[r0,#4]            ;162
000062  4410              ADD      r0,r0,r2              ;162
000064  6802              LDR      r2,[r0,#0]            ;165
000066  438a              BICS     r2,r2,r1              ;165
000068  6002              STR      r2,[r0,#0]            ;165
00006a  bd30              POP      {r4,r5,pc}
;;;168    
                          ENDP

                  |L7.108|
                          DCD      0x40013c00

                          AREA ||i.EXTI_StructInit||, CODE, READONLY, ALIGN=1

                  EXTI_StructInit PROC
;;;174      */
;;;175    void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
000000  2100              MOVS     r1,#0
;;;176    {
;;;177      EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
;;;178      EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
000002  6001              STR      r1,[r0,#0]
000004  7101              STRB     r1,[r0,#4]
;;;179      EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
000006  220c              MOVS     r2,#0xc
000008  7142              STRB     r2,[r0,#5]
;;;180      EXTI_InitStruct->EXTI_LineCmd = DISABLE;
00000a  7181              STRB     r1,[r0,#6]
;;;181    }
00000c  4770              BX       lr
;;;182    
                          ENDP


;*** Start embedded assembler ***

#line 1 "Libraries\\CMSIS\\stm32f4xx_exti.c"
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REV16|
#line 114 ".\\Libraries\\CMSIS\\core_cmInstr.h"
|__asm___16_stm32f4xx_exti_c_28b3b60e____REV16| PROC
#line 115

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.emb_text||, CODE, READONLY
	THUMB
	EXPORT |__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH|
#line 128
|__asm___16_stm32f4xx_exti_c_28b3b60e____REVSH| PROC
#line 129

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
